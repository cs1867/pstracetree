name: pstracetree-workflow
  
on:  
  workflow_dispatch:
    inputs:  
      OS: 
        description: 'OS to build'
        required: true
      BUILD_VARS_JSON:
        description: 'Build var json file'
        required: true
  workflow_run:
    workflows: "Create Artifacts and pass runid"
    branches: 'github-workflow'
    types:
      - completed

jobs:
  build-pstracetree:
    runs-on: ubuntu-latest
     
    steps:
      - name: Check out Repo
        uses: actions/checkout@v4
        with:
          ref: 5.2.0

      - name: Pretty-print BUILD_VARS_JSON
        run: |
          echo '${{ github.event.inputs.BUILD_VARS_JSON }}' | jq .
      - name: Delete current repo from build
        id: modify_json
        run: |
          # Remove the first repo from the repos array
          modified_json=$(echo '${{ github.event.inputs.BUILD_VARS_JSON }}' | jq 'del(.repos[0])')
          echo "Modified JSON:"
          echo "$modified_json" | jq .
          
          # Convert the modified JSON back to a single-line string and export it as an environment variable
          BUILD_VARS_JSON=$(echo "$modified_json" | jq -c '.')
          echo "BUILD_VARS_JSON=$BUILD_VARS_JSON" >> $GITHUB_ENV
          echo "**** next next ****"
          echo "BUILD_VARS_JSON=$BUILD_VARS_JSON"
   
      - name: Use modified BUILD_VARS_JSON
        run: |
          echo "Using the modified BUILD_VARS_JSON environment variable:"
          echo "$BUILD_VARS_JSON" | jq .
          
      - name: Look up the next repo name to build
        id: extract_repo_name
        run: |
          echo "BUILD_VARS_JSON value is: $BUILD_VARS_JSON"
          NEXTREPO=$(echo  "$BUILD_VARS_JSON" | jq -r '.repos[0].name' )
          echo "NEXTREPO=$NEXTREPO" >> $GITHUB_ENV  
            
      - name: Display NEXTREPO value
        run: echo "The value of NEXTREPO is $NEXTREPO"  

      - name: Add GitHub run ID to buildids
        id: add_run_id
        run: |
          GITHUB_RUN_ID=${{ github.run_id }}
    
          modified_json=$(echo "$BUILD_VARS_JSON" | jq --arg run_id "$GITHUB_RUN_ID" '.buildids.${{ github.event.repository.name }} = $run_id')
    
          echo "Modified JSON with GitHub run ID:"
          echo "$modified_json" | jq .
    
          BUILD_VARS_JSON=$(echo "$modified_json" | jq -c '.')
          echo "BUILD_VARS_JSON=$BUILD_VARS_JSON" >> $GITHUB_ENV
          echo "BUILD_VARS_JSON=$BUILD_VARS_JSON"
            
      - name: Create a temporary artifact downloads folder
        run: mkdir aritfacts

      - name: run docker oneshot builder
        run: |
          curl -s https://raw.githubusercontent.com/perfsonar/docker-oneshot-builder/main/build | sh -s - . '${{ github.event.inputs.OS }}'  
      - uses: actions/upload-artifact@v3
        with:
           name: ${{ github.event.repository.name }}-${{ github.event.inputs.OS }}
           path: unibuild-repo
           #Don't keep these for long.  This is just a test.
           retention-days: 5
         
      - name: Pass workflow  
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GIT_ACTIONS }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
            owner: 'cs1867',
            repo: '${{ env.NEXTREPO}}',
            workflow_id: '${{ env.NEXTREPO}}-workflow.yml',
            ref: 'github-workflow',
              inputs: {
              OS:  '${{ github.event.inputs.OS }}',
              BUILD_VARS_JSON: '${{ env.BUILD_VARS_JSON}}'
            }
            })
